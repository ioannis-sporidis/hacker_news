{"version":3,"sources":["helpers/actions.js","helpers/reducer.js","helpers/context.js","components/SearchForm.js","components/Buttons.js","components/Stories.js","App.js","index.js"],"names":["SET_LOADING","SET_STORIES","REMOVE_STORY","HANDLE_SEARCH","HANDLE_PAGE","reducer","state","action","type","isLoading","hits","payload","nbPages","newHits","filter","story","objectID","query","page","nextPage","prevPage","Error","initialState","AppContext","createContext","AppProvider","children","useReducer","dispatch","fetchStories","url","a","fetch","response","json","data","console","log","useEffect","Provider","value","removeStory","id","handleSearch","handlePage","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","onChange","target","Buttons","disabled","onClick","Stories","map","title","num_comments","points","author","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8873aff8.chunk.js","sourcesContent":["export const SET_LOADING = 'SET_LOADING';\nexport const SET_STORIES = 'SET_STORIES';\nexport const REMOVE_STORY = 'REMOVE_STORY';\nexport const HANDLE_SEARCH = 'HANDLE_SEARCH';\nexport const HANDLE_PAGE = 'HANDLE_PAGE';\n","import {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_SEARCH,\n  HANDLE_PAGE,\n} from './actions';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return { ...state, isLoading: true };\n    case SET_STORIES:\n      return {\n        ...state,\n        isLoading: false,\n        hits: action.payload.hits,\n        nbPages: action.payload.nbPages,\n      };\n    case REMOVE_STORY:\n      const newHits = state.hits.filter(\n        story => story.objectID !== action.payload\n      );\n      return { ...state, hits: newHits };\n    case HANDLE_SEARCH:\n      return { ...state, query: action.payload, page: 0 };\n    case HANDLE_PAGE:\n      if (action.payload === 'inc') {\n        let nextPage = state.page + 1;\n        if (nextPage > state.nbPages - 1) {\n          nextPage = 0;\n        }\n        return { ...state, page: nextPage };\n      }\n      if (action.payload === 'dec') {\n        let prevPage = state.page - 1;\n        if (prevPage < 0) {\n          prevPage = state.nbPages - 1;\n        }\n        return { ...state, page: prevPage };\n      }\n      break;\n    default:\n      throw new Error(`no matching \"${action.type}\" action type`);\n  }\n};\n\nexport default reducer;\n","import { createContext, useContext, useReducer, useEffect } from 'react';\nimport reducer from './reducer';\nimport {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_SEARCH,\n  HANDLE_PAGE,\n} from './actions';\n\nconst API_ENDPOINT = 'http://hn.algolia.com/api/v1/search?';\n\nconst initialState = {\n  isLoading: true,\n  hits: [],\n  query: 'react',\n  page: 0,\n  nbPages: 0,\n};\n\nconst AppContext = createContext();\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const fetchStories = async url => {\n    dispatch({ type: SET_LOADING });\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      dispatch({\n        type: SET_STORIES,\n        payload: { hits: data.hits, nbPages: data.nbPages },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const removeStory = id => {\n    dispatch({ type: REMOVE_STORY, payload: id });\n  };\n\n  const handleSearch = query => {\n    dispatch({ type: HANDLE_SEARCH, payload: query });\n  };\n\n  const handlePage = value => {\n    dispatch({ type: HANDLE_PAGE, payload: value });\n  };\n\n  useEffect(() => {\n    fetchStories(`${API_ENDPOINT}query=${state.query}&page=${state.page}`);\n  }, [state.query, state.page]);\n\n  return (\n    <AppContext.Provider\n      value={{ ...state, removeStory, handleSearch, handlePage }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nconst useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider, useGlobalContext };\n","import { useGlobalContext } from '../helpers/context';\n\nconst SearchForm = () => {\n  const { query, handleSearch } = useGlobalContext();\n\n  return (\n    <form className='search-form' onSubmit={e => e.preventDefault()}>\n      <h2>Search Hacker News</h2>\n      <input\n        type='text'\n        className='form-input'\n        value={query}\n        onChange={e => handleSearch(e.target.value)}\n      />\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { useGlobalContext } from '../helpers/context';\n\nconst Buttons = () => {\n  const { isLoading, page, nbPages, handlePage } = useGlobalContext();\n\n  return (\n    <div className='btn-container'>\n      <button\n        type='button'\n        disabled={isLoading}\n        onClick={() => handlePage('dec')}>\n        Prev\n      </button>\n      <p>\n        {page + 1} of {nbPages}\n      </p>\n      <button\n        type='button'\n        disabled={isLoading}\n        onClick={() => handlePage('inc')}>\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from 'react';\nimport { useGlobalContext } from '../helpers/context';\n\nconst Stories = () => {\n  const { isLoading, hits, removeStory } = useGlobalContext();\n\n  if (isLoading) {\n    return <div className='loading'></div>;\n  } else {\n    return (\n      <section className='stories'>\n        {hits.map(story => {\n          const { objectID, title, num_comments, url, points, author } = story;\n          return (\n            <article key={objectID} className='story'>\n              <h4 className='title'>{title}</h4>\n              <p className='info'>\n                {points} points by <span>{author} | </span> {num_comments}{' '}\n                comments\n              </p>\n              <div>\n                <a\n                  href={url}\n                  className='read-link'\n                  target='_blank'\n                  rel='noreferrer'>\n                  read more\n                </a>\n                <button\n                  type='button'\n                  className='remove-btn'\n                  onClick={() => removeStory(objectID)}>\n                  Remove\n                </button>\n              </div>\n            </article>\n          );\n        })}\n      </section>\n    );\n  }\n};\n\nexport default Stories;\n","import SearchForm from './components/SearchForm';\nimport Buttons from './components/Buttons';\nimport Stories from './components/Stories';\n\nfunction App() {\n  return (\n    <>\n      <SearchForm />\n      <Buttons />\n      <Stories />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './helpers/context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}